import torch
import torch.nn as nn
import torchvision.models as models
import torchvision.transforms as transforms
from torch.autograd import Variable
from PIL import Image
import requests
from numpy import dot
from numpy.linalg import norm
import numpy as np
from tempfile import TemporaryFile
model = models.resnet18(pretrained=True)
layer = model._modules.get('avgpool')
model.eval()
scaler= transforms.Resize((224,224))
normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
to_tensor = transforms.ToTensor()

def get_vector(image_name):
    img = Image.open(image_name)
    t_img = Variable(normalize(to_tensor(scaler(img))).unsqueeze(0))
    my_embedding = torch.zeros(512)
    def copy_data(m, i, o):
        my_embedding.copy_(o.data.reshape(o.data.size(1)))
    h = layer.register_forward_hook(copy_data)
    model(t_img)
    h.remove()
    X = my_embedding.numpy().astype('float64')
    return X
jpg_folder = "D:/harris/anh_lichsu/"
npy_folder = "D:/harris/npy_lichsu"
import os
from glob import glob
filename_list = glob(os.path.join(jpg_folder, "*.jpg"))
for filename in filename_list:
    print(filename) # abc.jpg + npy 
    vector = get_vector(filename)
    new_name = os.path.join("D:/harris/npy_lichsu", filename.replace("jpg", "") + "npy")
    with open(new_name, 'wb') as f:
        print("ahihi")
        print(new_name)
        np.save(f ,vector)

